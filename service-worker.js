"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/mobx-dungeon-crawler/index.html","271aeb26b3a10de772e40b2c9ca88d99"],["/mobx-dungeon-crawler/static/css/main.8dc87ad2.css","c8afb36c9213d24603d14fe2c2dab1c8"],["/mobx-dungeon-crawler/static/js/main.7e738124.js","345a043709d81786e2e2f495e20103f0"],["/mobx-dungeon-crawler/static/media/background.71d08ed6.jpg","71d08ed6cf1a5fe7c0694a3edb4b9879"],["/mobx-dungeon-crawler/static/media/confirm.2b06e3e5.ogg","2b06e3e5e6517fd316e935691755a839"],["/mobx-dungeon-crawler/static/media/cthuluEnd.fc09532e.ogg","fc09532e97af5b88d6b69b657510a27b"],["/mobx-dungeon-crawler/static/media/cthuluWarn.4c14790a.ogg","4c14790a2f074e740b0b325e0338b139"],["/mobx-dungeon-crawler/static/media/health.a4ea16e0.ogg","a4ea16e069fe6b3ec5ad950b34f6d1ae"],["/mobx-dungeon-crawler/static/media/monster1.3457aa35.ogg","3457aa35dae55444cb950a79267bb249"],["/mobx-dungeon-crawler/static/media/monster2.514b4325.ogg","514b432552129b886f7de1b555cc2559"],["/mobx-dungeon-crawler/static/media/monster3.41b6bbae.ogg","41b6bbae5cb85a6bf01dc564fee55e2e"],["/mobx-dungeon-crawler/static/media/monster4.2abc7c3f.ogg","2abc7c3ff166b4953947454d1b2de2f4"],["/mobx-dungeon-crawler/static/media/opener.b717e4fa.ogg","b717e4fa827d36f8c62f052b04aba3b6"],["/mobx-dungeon-crawler/static/media/pickUpSword.c53dedab.ogg","c53dedab4efa087777f8635bc508fc5e"],["/mobx-dungeon-crawler/static/media/portal.43ff39cb.ogg","43ff39cbb9b4fa5e2db200028845b947"],["/mobx-dungeon-crawler/static/media/punch.1061aa54.ogg","1061aa54e0aa562f8be0fd172188904c"],["/mobx-dungeon-crawler/static/media/slice.184ed69d.ogg","184ed69d797b7d7e55b86e2aaff81738"],["/mobx-dungeon-crawler/static/media/walk.886395b7.ogg","886395b719ad85e572d5e717e3d39b66"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=n),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(n){return new Response(n,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,n,a,t){var r=new URL(e);return t&&r.pathname.match(t)||(r.search+=(r.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var a=new URL(n).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,n){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return n.every(function(n){return!n.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],a=e[1],t=new URL(n,self.location),r=createCacheKey(t,hashParamName,a,/\.\w{8}\./);return[t.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(n){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!n.has(a)){var t=new Request(a,{credentials:"same-origin"});return fetch(t).then(function(n){if(!n.ok)throw new Error("Request for "+a+" returned a response with status "+n.status);return cleanResponse(n).then(function(n){return e.put(a,n)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var n=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!n.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var n,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(n=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),n=urlsToCacheKeys.has(a));!n&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/mobx-dungeon-crawler/index.html",self.location).toString(),n=urlsToCacheKeys.has(a)),n&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(n){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,n),fetch(e.request)}))}});